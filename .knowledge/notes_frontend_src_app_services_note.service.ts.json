{"is_source_file": true, "format": "TypeScript", "description": "This file defines the NoteService class in Angular, managing in-memory CRUD operations for notes within a note-taking application.", "external_files": ["../models/note.model"], "external_methods": ["rxjs.BehaviorSubject", "rxjs.Observable"], "published": ["NoteService"], "classes": [{"name": "NoteService", "description": "Angular service managing CRUD operations for notes, including in-memory storage and observable streams."}], "methods": [{"name": "getNotes", "description": "Returns an observable stream of the notes list."}, {"name": "getNoteById", "description": "Retrieves a note by its ID."}, {"name": "createNote", "description": "Creates a new note and updates the observable stream."}, {"name": "updateNote", "description": "Updates a note by ID and emits the updated list."}, {"name": "deleteNote", "description": "Deletes a note by ID and updates the stream."}], "calls": ["rxjs.BehaviorSubject.next", "rxjs.BehaviorSubject.asObservable", "rxjs.BehaviorSubject.getValue"], "search-terms": ["NoteService", "CRUD notes", "in-memory notes", "Angular service", "note management"], "state": 2, "file_id": 22, "knowledge_revision": 45, "git_revision": "", "ctags": [{"_type": "tag", "name": "NoteService", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/services/note.service.ts", "pattern": "/^export class NoteService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/services/note.service.ts", "pattern": "/^    const note: Note = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/services/note.service.ts", "pattern": "/^    const notes = this.notesSubject.getValue().filter(note => note.id !== id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/services/note.service.ts", "pattern": "/^    const notes = this.notesSubject.getValue().map(note =>$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notesSubject", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/services/note.service.ts", "pattern": "/^  private notesSubject = new BehaviorSubject<Note[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "NoteService", "scopeKind": "class"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/services/note.service.ts", "pattern": "/^    const now = new Date();$/", "language": "TypeScript", "kind": "constant"}], "hash": "64e050e621a5cd8e19e615015525e7f0", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/note.service.ts", "fields": [{"name": "private notesSubject = new BehaviorSubject<Note[]>([]);", "scope": "NoteService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"45": ""}]}