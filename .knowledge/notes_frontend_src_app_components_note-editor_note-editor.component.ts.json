{"is_source_file": true, "format": "TypeScript/Angular component", "description": "This file defines an Angular component for editing notes, including form handling, input/output properties, and lifecycle methods.", "external_files": ["./note-editor.component.html", "./note-editor.component.css", "../../models/note.model"], "external_methods": ["FormGroup.setValue", "FormGroup.reset", "EventEmitter.emit"], "published": ["NoteEditorComponent"], "classes": [{"name": "NoteEditorComponent", "description": "Angular component providing an editor interface for a note, supporting creation, editing, and canceling actions."}], "methods": [{"name": "ngOnChanges", "description": "Handles input changes to populate or reset the form based on the note or isNew status."}, {"name": "onSave", "description": "Emits the save event with the current note data and resets the form."}, {"name": "onCancel", "description": "Emits the cancel event and resets the form."}], "calls": ["this.save.emit", "this.cancel.emit", "this.noteForm.setValue", "this.noteForm.reset"], "search-terms": ["Angular note editor", "NoteEditorComponent", "ReactiveFormsModule", "form handling"], "state": 2, "file_id": 29, "knowledge_revision": 64, "git_revision": "", "ctags": [{"_type": "tag", "name": "NoteEditorComponent", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^export class NoteEditorComponent implements OnChanges {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "isNew", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Input() isNew = false;$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Input() note: Note | null = null;$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Output() save = new EventEmitter<{title: string; content: string;}>();$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/simple-notes-application-142280-142314/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^    const value = this.noteForm.value;$/", "language": "TypeScript", "kind": "constant"}], "hash": "5ce991c2d9e0cdb3cf407690a2fd78d6", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/components/note-editor/note-editor.component.ts", "fields": [{"name": "@Input() isNew = false;", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Input() note: Note | null = null;", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Output() save = new EventEmitter<{title: string; content: string;}>();", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"64": ""}]}